{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosan\\\\basictask_manager\\\\src\\\\components\\\\tasklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, query, onSnapshot, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from '../firebaseconfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [sortOrder, setSortOrder] = useState('dueDate'); // Default sorting by dueDate\n  const [filter, setFilter] = useState('all'); // Default filter to show all tasks\n\n  useEffect(() => {\n    const q = query(collection(db, \"tasks\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      let tasksData = [];\n      querySnapshot.forEach(doc => {\n        tasksData.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n\n      // Filter tasks based on the selected filter\n      if (filter === 'completed') {\n        tasksData = tasksData.filter(task => task.status === 'completed');\n      } else if (filter === 'pending') {\n        tasksData = tasksData.filter(task => task.status === 'pending');\n      }\n\n      // Sort tasks based on the selected sort order\n      tasksData.sort((a, b) => {\n        if (sortOrder === 'dueDate') {\n          return new Date(a.dueDate) - new Date(b.dueDate);\n        } else {\n          return a.title.localeCompare(b.title);\n        }\n      });\n      setTasks(tasksData);\n    });\n    return () => unsubscribe();\n  }, [sortOrder, filter]);\n  const markAsCompleted = async task => {\n    if (task.status !== 'completed') {\n      try {\n        const taskDocRef = doc(db, \"tasks\", task.id);\n        await updateDoc(taskDocRef, {\n          status: 'completed'\n        });\n        setTasks(prevTasks => prevTasks.map(t => t.id === task.id ? {\n          ...t,\n          status: 'completed'\n        } : t));\n      } catch (err) {\n        console.error('Error marking task as completed: ', err);\n      }\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      const taskDocRef = doc(db, \"tasks\", id);\n      await deleteDoc(taskDocRef);\n      setTasks(prevTasks => prevTasks.filter(t => t.id !== id));\n    } catch (err) {\n      console.error('Error deleting task: ', err);\n    }\n  };\n  const handleSortChange = e => {\n    setSortOrder(e.target.value);\n  };\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSortChange,\n        value: sortOrder,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dueDate\",\n          children: \"Sort by Due Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Sort by Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleFilterChange,\n        value: filter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Show Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Show Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-item ${task.status === 'completed' ? 'completed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Due: \", task.dueDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => markAsCompleted(task),\n        children: \"Mark as Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"jDFUGx6lStxKyQ3+R5pg3gCNfnE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","collection","query","onSnapshot","updateDoc","doc","deleteDoc","db","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","sortOrder","setSortOrder","filter","setFilter","q","unsubscribe","querySnapshot","tasksData","forEach","push","data","id","task","status","sort","a","b","Date","dueDate","title","localeCompare","markAsCompleted","taskDocRef","prevTasks","map","t","err","console","error","deleteTask","handleSortChange","e","target","value","handleFilterChange","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rosan/basictask_manager/src/components/tasklist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, onSnapshot, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\r\nimport { db } from '../firebaseconfig';\r\n\r\nfunction TaskList() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState('dueDate'); // Default sorting by dueDate\r\n    const [filter, setFilter] = useState('all'); // Default filter to show all tasks\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(db, \"tasks\"));\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            let tasksData = [];\r\n            querySnapshot.forEach((doc) => {\r\n                tasksData.push({ ...doc.data(), id: doc.id });\r\n            });\r\n\r\n            // Filter tasks based on the selected filter\r\n            if (filter === 'completed') {\r\n                tasksData = tasksData.filter(task => task.status === 'completed');\r\n            } else if (filter === 'pending') {\r\n                tasksData = tasksData.filter(task => task.status === 'pending');\r\n            }\r\n\r\n            // Sort tasks based on the selected sort order\r\n            tasksData.sort((a, b) => {\r\n                if (sortOrder === 'dueDate') {\r\n                    return new Date(a.dueDate) - new Date(b.dueDate);\r\n                } else {\r\n                    return a.title.localeCompare(b.title);\r\n                }\r\n            });\r\n\r\n            setTasks(tasksData);\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [sortOrder, filter]);\r\n\r\n    const markAsCompleted = async (task) => {\r\n        if (task.status !== 'completed') {\r\n            try {\r\n                const taskDocRef = doc(db, \"tasks\", task.id);\r\n                await updateDoc(taskDocRef, { status: 'completed' });\r\n                setTasks(prevTasks => prevTasks.map(t => \r\n                    t.id === task.id ? { ...t, status: 'completed' } : t\r\n                ));\r\n            } catch (err) {\r\n                console.error('Error marking task as completed: ', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteTask = async (id) => {\r\n        try {\r\n            const taskDocRef = doc(db, \"tasks\", id);\r\n            await deleteDoc(taskDocRef);\r\n            setTasks(prevTasks => prevTasks.filter(t => t.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting task: ', err);\r\n        }\r\n    };\r\n\r\n    const handleSortChange = (e) => {\r\n        setSortOrder(e.target.value);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-list\">\r\n            <div className=\"filters\">\r\n                <select onChange={handleSortChange} value={sortOrder}>\r\n                    <option value=\"dueDate\">Sort by Due Date</option>\r\n                    <option value=\"title\">Sort by Title</option>\r\n                </select>\r\n                <select onChange={handleFilterChange} value={filter}>\r\n                    <option value=\"all\">Show All</option>\r\n                    <option value=\"completed\">Show Completed</option>\r\n                    <option value=\"pending\">Show Pending</option>\r\n                </select>\r\n            </div>\r\n            {tasks.map((task) => (\r\n                <div key={task.id} className={`task-item ${task.status === 'completed' ? 'completed' : ''}`}>\r\n                    <h3>{task.title}</h3>\r\n                    <p>Due: {task.dueDate}</p>\r\n                    <p>{task.description}</p>\r\n                    <button onClick={() => markAsCompleted(task)}>Mark as Completed</button>\r\n                    <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}