{"ast":null,"code":"import React,{useState,useEffect}from'react';import{db}from'./firebase';import{collection,getDocs}from'firebase/firestore';import TaskList from'./TaskList';import TaskForm from'./TaskForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);useEffect(()=>{const fetchTasks=async()=>{const tasksCollection=collection(db,'tasks');const taskSnapshot=await getDocs(tasksCollection);const taskList=taskSnapshot.docs.map(doc=>doc.data());setTasks(taskList);};fetchTasks();},[]);const addTask=task=>{setTasks([...tasks,task]);};const editTask=id=>{// Logic to edit a task in Firestore\n};const deleteTask=id=>{// Logic to delete a task from Firestore\n};const completeTask=id=>{// Logic to mark a task as completed in Firestore\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Manager\"}),/*#__PURE__*/_jsx(TaskForm,{addTask:addTask}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,onEdit:editTask,onDelete:deleteTask,onComplete:completeTask})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","TaskList","TaskForm","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","fetchTasks","tasksCollection","taskSnapshot","taskList","docs","map","doc","data","addTask","task","editTask","id","deleteTask","completeTask","className","children","onEdit","onDelete","onComplete"],"sources":["C:/Users/rosan/basictask_manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from './firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const tasksCollection = collection(db, 'tasks');\n      const taskSnapshot = await getDocs(tasksCollection);\n      const taskList = taskSnapshot.docs.map(doc => doc.data());\n      setTasks(taskList);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  };\n\n  const editTask = (id) => {\n    // Logic to edit a task in Firestore\n  };\n\n  const deleteTask = (id) => {\n    // Logic to delete a task from Firestore\n  };\n\n  const completeTask = (id) => {\n    // Logic to mark a task as completed in Firestore\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <TaskForm addTask={addTask} />\n      <TaskList tasks={tasks} onEdit={editTask} onDelete={deleteTask} onComplete={completeTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,EAAE,KAAQ,YAAY,CAC/B,OAASC,UAAU,CAAEC,OAAO,KAAQ,oBAAoB,CACxD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,eAAe,CAAGZ,UAAU,CAACD,EAAE,CAAE,OAAO,CAAC,CAC/C,KAAM,CAAAc,YAAY,CAAG,KAAM,CAAAZ,OAAO,CAACW,eAAe,CAAC,CACnD,KAAM,CAAAE,QAAQ,CAAGD,YAAY,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzDR,QAAQ,CAACI,QAAQ,CAAC,CACpB,CAAC,CAEDH,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,OAAO,CAAIC,IAAI,EAAK,CACxBV,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEW,IAAI,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAIC,EAAE,EAAK,CACvB;AAAA,CACD,CAED,KAAM,CAAAC,UAAU,CAAID,EAAE,EAAK,CACzB;AAAA,CACD,CAED,KAAM,CAAAE,YAAY,CAAIF,EAAE,EAAK,CAC3B;AAAA,CACD,CAED,mBACEf,KAAA,QAAKkB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBrB,IAAA,OAAAqB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBrB,IAAA,CAACF,QAAQ,EAACgB,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAC9Bd,IAAA,CAACH,QAAQ,EAACO,KAAK,CAAEA,KAAM,CAACkB,MAAM,CAAEN,QAAS,CAACO,QAAQ,CAAEL,UAAW,CAACM,UAAU,CAAEL,YAAa,CAAE,CAAC,EACzF,CAAC,CAEV,CAEA,cAAe,CAAAhB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}