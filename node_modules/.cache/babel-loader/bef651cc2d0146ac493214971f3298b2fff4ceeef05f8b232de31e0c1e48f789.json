{"ast":null,"code":"import React,{useState,useEffect}from'react';import{collection,query,onSnapshot,updateDoc,doc,deleteDoc}from\"firebase/firestore\";import{db}from'../firebaseconfig';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TaskList(){const[tasks,setTasks]=useState([]);const[sortOrder,setSortOrder]=useState('dueDate');// Default sorting by dueDate\nconst[filter,setFilter]=useState('all');// Default filter to show all tasks\nuseEffect(()=>{const q=query(collection(db,\"tasks\"));const unsubscribe=onSnapshot(q,querySnapshot=>{let tasksData=[];querySnapshot.forEach(doc=>{tasksData.push({...doc.data(),id:doc.id});});// Filter tasks based on the selected filter\nif(filter==='completed'){tasksData=tasksData.filter(task=>task.status==='completed');}else if(filter==='pending'){tasksData=tasksData.filter(task=>task.status==='pending');}// Sort tasks based on the selected sort order\ntasksData.sort((a,b)=>{if(sortOrder==='dueDate'){return new Date(a.dueDate)-new Date(b.dueDate);}else{return a.title.localeCompare(b.title);}});setTasks(tasksData);});return()=>unsubscribe();},[sortOrder,filter]);const markAsCompleted=async task=>{if(task.status!=='completed'){try{const taskDocRef=doc(db,\"tasks\",task.id);await updateDoc(taskDocRef,{status:'completed'});setTasks(prevTasks=>prevTasks.map(t=>t.id===task.id?{...t,status:'completed'}:t));}catch(err){console.error('Error marking task as completed: ',err);}}};const deleteTask=async id=>{try{const taskDocRef=doc(db,\"tasks\",id);await deleteDoc(taskDocRef);setTasks(prevTasks=>prevTasks.filter(t=>t.id!==id));}catch(err){console.error('Error deleting task: ',err);}};const handleSortChange=e=>{setSortOrder(e.target.value);};const handleFilterChange=e=>{setFilter(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsxs(\"select\",{onChange:handleSortChange,value:sortOrder,children:[/*#__PURE__*/_jsx(\"option\",{value:\"dueDate\",children:\"Sort by Due Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"title\",children:\"Sort by Title\"})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:handleFilterChange,value:filter,children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"Show All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Show Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Show Pending\"})]})]}),tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:`task-item ${task.status==='completed'?'completed':''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:task.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Due: \",task.dueDate]}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>markAsCompleted(task),children:\"Mark as Completed\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.id),children:\"Delete\"})]},task.id))]});}export default TaskList;","map":{"version":3,"names":["React","useState","useEffect","collection","query","onSnapshot","updateDoc","doc","deleteDoc","db","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","setTasks","sortOrder","setSortOrder","filter","setFilter","q","unsubscribe","querySnapshot","tasksData","forEach","push","data","id","task","status","sort","a","b","Date","dueDate","title","localeCompare","markAsCompleted","taskDocRef","prevTasks","map","t","err","console","error","deleteTask","handleSortChange","e","target","value","handleFilterChange","className","children","onChange","description","onClick"],"sources":["C:/Users/rosan/basictask_manager/src/components/tasklist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, onSnapshot, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\r\nimport { db } from '../firebaseconfig';\r\n\r\nfunction TaskList() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState('dueDate'); // Default sorting by dueDate\r\n    const [filter, setFilter] = useState('all'); // Default filter to show all tasks\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(db, \"tasks\"));\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            let tasksData = [];\r\n            querySnapshot.forEach((doc) => {\r\n                tasksData.push({ ...doc.data(), id: doc.id });\r\n            });\r\n\r\n            // Filter tasks based on the selected filter\r\n            if (filter === 'completed') {\r\n                tasksData = tasksData.filter(task => task.status === 'completed');\r\n            } else if (filter === 'pending') {\r\n                tasksData = tasksData.filter(task => task.status === 'pending');\r\n            }\r\n\r\n            // Sort tasks based on the selected sort order\r\n            tasksData.sort((a, b) => {\r\n                if (sortOrder === 'dueDate') {\r\n                    return new Date(a.dueDate) - new Date(b.dueDate);\r\n                } else {\r\n                    return a.title.localeCompare(b.title);\r\n                }\r\n            });\r\n\r\n            setTasks(tasksData);\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [sortOrder, filter]);\r\n\r\n    const markAsCompleted = async (task) => {\r\n        if (task.status !== 'completed') {\r\n            try {\r\n                const taskDocRef = doc(db, \"tasks\", task.id);\r\n                await updateDoc(taskDocRef, { status: 'completed' });\r\n                setTasks(prevTasks => prevTasks.map(t => \r\n                    t.id === task.id ? { ...t, status: 'completed' } : t\r\n                ));\r\n            } catch (err) {\r\n                console.error('Error marking task as completed: ', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteTask = async (id) => {\r\n        try {\r\n            const taskDocRef = doc(db, \"tasks\", id);\r\n            await deleteDoc(taskDocRef);\r\n            setTasks(prevTasks => prevTasks.filter(t => t.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting task: ', err);\r\n        }\r\n    };\r\n\r\n    const handleSortChange = (e) => {\r\n        setSortOrder(e.target.value);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-list\">\r\n            <div className=\"filters\">\r\n                <select onChange={handleSortChange} value={sortOrder}>\r\n                    <option value=\"dueDate\">Sort by Due Date</option>\r\n                    <option value=\"title\">Sort by Title</option>\r\n                </select>\r\n                <select onChange={handleFilterChange} value={filter}>\r\n                    <option value=\"all\">Show All</option>\r\n                    <option value=\"completed\">Show Completed</option>\r\n                    <option value=\"pending\">Show Pending</option>\r\n                </select>\r\n            </div>\r\n            {tasks.map((task) => (\r\n                <div key={task.id} className={`task-item ${task.status === 'completed' ? 'completed' : ''}`}>\r\n                    <h3>{task.title}</h3>\r\n                    <p>Due: {task.dueDate}</p>\r\n                    <p>{task.description}</p>\r\n                    <button onClick={() => markAsCompleted(task)}>Mark as Completed</button>\r\n                    <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,UAAU,CAAEC,KAAK,CAAEC,UAAU,CAAEC,SAAS,CAAEC,GAAG,CAAEC,SAAS,KAAQ,oBAAoB,CAC7F,OAASC,EAAE,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,SAAS,CAAC,CAAE;AACvD,KAAM,CAACkB,MAAM,CAAEC,SAAS,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE7CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmB,CAAC,CAAGjB,KAAK,CAACD,UAAU,CAACM,EAAE,CAAE,OAAO,CAAC,CAAC,CACxC,KAAM,CAAAa,WAAW,CAAGjB,UAAU,CAACgB,CAAC,CAAGE,aAAa,EAAK,CACjD,GAAI,CAAAC,SAAS,CAAG,EAAE,CAClBD,aAAa,CAACE,OAAO,CAAElB,GAAG,EAAK,CAC3BiB,SAAS,CAACE,IAAI,CAAC,CAAE,GAAGnB,GAAG,CAACoB,IAAI,CAAC,CAAC,CAAEC,EAAE,CAAErB,GAAG,CAACqB,EAAG,CAAC,CAAC,CACjD,CAAC,CAAC,CAEF;AACA,GAAIT,MAAM,GAAK,WAAW,CAAE,CACxBK,SAAS,CAAGA,SAAS,CAACL,MAAM,CAACU,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,WAAW,CAAC,CACrE,CAAC,IAAM,IAAIX,MAAM,GAAK,SAAS,CAAE,CAC7BK,SAAS,CAAGA,SAAS,CAACL,MAAM,CAACU,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,SAAS,CAAC,CACnE,CAEA;AACAN,SAAS,CAACO,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACrB,GAAIhB,SAAS,GAAK,SAAS,CAAE,CACzB,MAAO,IAAI,CAAAiB,IAAI,CAACF,CAAC,CAACG,OAAO,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC,CACpD,CAAC,IAAM,CACH,MAAO,CAAAH,CAAC,CAACI,KAAK,CAACC,aAAa,CAACJ,CAAC,CAACG,KAAK,CAAC,CACzC,CACJ,CAAC,CAAC,CAEFpB,QAAQ,CAACQ,SAAS,CAAC,CACvB,CAAC,CAAC,CAEF,MAAO,IAAMF,WAAW,CAAC,CAAC,CAC9B,CAAC,CAAE,CAACL,SAAS,CAAEE,MAAM,CAAC,CAAC,CAEvB,KAAM,CAAAmB,eAAe,CAAG,KAAO,CAAAT,IAAI,EAAK,CACpC,GAAIA,IAAI,CAACC,MAAM,GAAK,WAAW,CAAE,CAC7B,GAAI,CACA,KAAM,CAAAS,UAAU,CAAGhC,GAAG,CAACE,EAAE,CAAE,OAAO,CAAEoB,IAAI,CAACD,EAAE,CAAC,CAC5C,KAAM,CAAAtB,SAAS,CAACiC,UAAU,CAAE,CAAET,MAAM,CAAE,WAAY,CAAC,CAAC,CACpDd,QAAQ,CAACwB,SAAS,EAAIA,SAAS,CAACC,GAAG,CAACC,CAAC,EACjCA,CAAC,CAACd,EAAE,GAAKC,IAAI,CAACD,EAAE,CAAG,CAAE,GAAGc,CAAC,CAAEZ,MAAM,CAAE,WAAY,CAAC,CAAGY,CACvD,CAAC,CAAC,CACN,CAAE,MAAOC,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAEF,GAAG,CAAC,CAC3D,CACJ,CACJ,CAAC,CAED,KAAM,CAAAG,UAAU,CAAG,KAAO,CAAAlB,EAAE,EAAK,CAC7B,GAAI,CACA,KAAM,CAAAW,UAAU,CAAGhC,GAAG,CAACE,EAAE,CAAE,OAAO,CAAEmB,EAAE,CAAC,CACvC,KAAM,CAAApB,SAAS,CAAC+B,UAAU,CAAC,CAC3BvB,QAAQ,CAACwB,SAAS,EAAIA,SAAS,CAACrB,MAAM,CAACuB,CAAC,EAAIA,CAAC,CAACd,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC7D,CAAE,MAAOe,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC/C,CACJ,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAIC,CAAC,EAAK,CAC5B9B,YAAY,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIH,CAAC,EAAK,CAC9B5B,SAAS,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,mBACIrC,KAAA,QAAKuC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBxC,KAAA,QAAKuC,SAAS,CAAC,SAAS,CAAAC,QAAA,eACpBxC,KAAA,WAAQyC,QAAQ,CAAEP,gBAAiB,CAACG,KAAK,CAAEjC,SAAU,CAAAoC,QAAA,eACjD1C,IAAA,WAAQuC,KAAK,CAAC,SAAS,CAAAG,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACjD1C,IAAA,WAAQuC,KAAK,CAAC,OAAO,CAAAG,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxC,CAAC,cACTxC,KAAA,WAAQyC,QAAQ,CAAEH,kBAAmB,CAACD,KAAK,CAAE/B,MAAO,CAAAkC,QAAA,eAChD1C,IAAA,WAAQuC,KAAK,CAAC,KAAK,CAAAG,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACrC1C,IAAA,WAAQuC,KAAK,CAAC,WAAW,CAAAG,QAAA,CAAC,gBAAc,CAAQ,CAAC,cACjD1C,IAAA,WAAQuC,KAAK,CAAC,SAAS,CAAAG,QAAA,CAAC,cAAY,CAAQ,CAAC,EACzC,CAAC,EACR,CAAC,CACLtC,KAAK,CAAC0B,GAAG,CAAEZ,IAAI,eACZhB,KAAA,QAAmBuC,SAAS,CAAE,aAAavB,IAAI,CAACC,MAAM,GAAK,WAAW,CAAG,WAAW,CAAG,EAAE,EAAG,CAAAuB,QAAA,eACxF1C,IAAA,OAAA0C,QAAA,CAAKxB,IAAI,CAACO,KAAK,CAAK,CAAC,cACrBvB,KAAA,MAAAwC,QAAA,EAAG,OAAK,CAACxB,IAAI,CAACM,OAAO,EAAI,CAAC,cAC1BxB,IAAA,MAAA0C,QAAA,CAAIxB,IAAI,CAAC0B,WAAW,CAAI,CAAC,cACzB5C,IAAA,WAAQ6C,OAAO,CAAEA,CAAA,GAAMlB,eAAe,CAACT,IAAI,CAAE,CAAAwB,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACxE1C,IAAA,WAAQ6C,OAAO,CAAEA,CAAA,GAAMV,UAAU,CAACjB,IAAI,CAACD,EAAE,CAAE,CAAAyB,QAAA,CAAC,QAAM,CAAQ,CAAC,GALrDxB,IAAI,CAACD,EAMV,CACR,CAAC,EACD,CAAC,CAEd,CAEA,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}